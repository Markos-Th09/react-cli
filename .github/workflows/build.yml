name: Build react-cli
on:
  release:
    types: [published]
  workflow_dispatch:
jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1.0.6
        with:
          default: true
          override: true
          toolchain: nightly
          target: "i686-pc-windows-msvc"
      - name: Cache build
        uses: Swatinem/rust-cache@v1
      - name: Build the binary
        run: |
          rustup target add aarch64-pc-windows-msvc
          cargo build -Zmultitarget --target=x86_64-pc-windows-msvc --target=i686-pc-windows-msvc --target=aarch64-pc-windows-msvc --release -vv
          cd target\x86_64-pc-windows-msvc\release && tar -cvf react-x86_64-pc-windows-msvc.zip react.exe  && cd ../../..
          cd target\i686-pc-windows-msvc\release && tar -cvf react-i686-pc-windows-msvc.zip react.exe  && cd ../../..
          cd target\aarch64-pc-windows-msvc\release && tar -cvf react-aarch64-pc-windows-msvc.zip react.exe  && cd ../../..
      - name: Upload react-x86_64-pc-windows-msvc
        uses: actions/upload-artifact@v3
        with:
          name: react-x86_64-pc-windows-msvc.zip
          path: target\x86_64-pc-windows-msvc\release\react-x86_64-pc-windows-msvc.zip
      - name: Upload react-i686-pc-windows-msvc
        uses: actions/upload-artifact@v3
        with:
          name: react-i686-pc-windows-msvc.zip
          path: target\i686-pc-windows-msvc\release\react-i686-pc-windows-msvc.zip
      - name: Upload react-aarch64-pc-windows-msvc
        uses: actions/upload-artifact@v3
        with:
          name: react-aarch64-pc-windows-msvc.zip
          path: target\aarch64-pc-windows-msvc\release\react-aarch64-pc-windows-msvc.zip

      - name: Publish in release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target\x86_64-pc-windows-msvc\release\react-x86_64-pc-windows-msvc.zip
            target\i686-pc-windows-msvc\release\react-i686-pc-windows-msvc.zip
            target\aarch64-pc-windows-msvc\release\react-aarch64-pc-windows-msvc.zip
          token: ${{ secrets.GITHUB_TOKEN }}
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1.0.6
        with:
          default: true
          override: true
          toolchain: nightly
          target: "aarch64-apple-darwin"
      - name: Cache build
        uses: Swatinem/rust-cache@v1
      - name: Build the binary
        run: |
          cargo build --release -Zmultitarget --target=x86_64-apple-darwin --target=aarch64-apple-darwin -vv
          cd target/x86_64-apple-darwin/release/ && tar -cvf react-x86_64-apple-darwin.tar.gz react  && cd ../../..
          cd target/aarch64-apple-darwin/release/ && tar -cvf react-aarch64-apple-darwin.tar.gz react  && cd ../../..
      - name: Upload react-x86_64-apple-darwin.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: react-x86_64-apple-darwin.tar.gz
          path: target/x86_64-apple-darwin/release/react-x86_64-apple-darwin.tar.gz
      - name: Upload aarch64-apple-darwin.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: react-aarch64-apple-darwin.tar.gz
          path: target/aarch64-apple-darwin/release/react-aarch64-apple-darwin.tar.gz

      - name: Publish in release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/x86_64-apple-darwin/release/react-x86_64-apple-darwin.tar.gz
            target/aarch64-apple-darwin/release/react-aarch64-apple-darwin.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
  build-gnu-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1.0.6
        with:
          default: true
          override: true
          toolchain: nightly
          target: i686-unknown-linux-gnu
      - name: Cache build
        uses: Swatinem/rust-cache@v1
      - name: Build the binary
        run: |
          rustup target add aarch64-unknown-linux-gnu
          rustup target add armv7-unknown-linux-gnueabi
          rustup target add armv7-unknown-linux-gnueabihf
          sudo apt update && sudo apt install -y -qq gcc-i686-linux-gnu gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi gcc-arm-linux-gnueabihf
          mkdir -p .cargo

          echo '[target.i686-unknown-linux-gnu]'>>.cargo/config
          echo 'linker = "i686-linux-gnu-gcc"'>>.cargo/config

          echo '[target.aarch64-unknown-linux-gnu]'>>.cargo/config
          echo 'linker = "aarch64-linux-gnu-gcc"'>>.cargo/config

          echo '[target.armv7-unknown-linux-gnueabi]' >>.cargo/config
          echo 'linker = "arm-linux-gnueabi-gcc"' >>.cargo/config

          echo '[target.armv7-unknown-linux-gnueabihf]' >>.cargo/config
          echo 'linker = "arm-linux-gnueabihf-gcc"' >>.cargo/config

          cargo build -Zmultitarget --target=x86_64-unknown-linux-gnu \
                --target=i686-unknown-linux-gnu \
                --target=aarch64-unknown-linux-gnu \
                --target=aarch64-unknown-linux-gnu \
                --target=armv7-unknown-linux-gnueabi \
                --target=armv7-unknown-linux-gnueabihf \
                --release -vv

          cd target/x86_64-unknown-linux-gnu/release/ && tar -cvf react-x86_64-unknown-linux-gnu.tar.gz react && cd ../../..
          cd target/aarch64-unknown-linux-gnu/release/ && tar -cvf react-aarch64-unknown-linux-gnu.tar.gz react  && cd ../../..
          cd target/i686-unknown-linux-gnu/release/ && tar -cvf react-i686-unknown-linux-gnu.tar.gz react  && cd ../../..
          cd target/armv7-unknown-linux-gnueabi/release/ && tar -cvf react-armv7-unknown-linux-gnueabi.tar.gz react  && cd ../../..
          cd target/armv7-unknown-linux-gnueabihf/release/ && tar -cvf react-armv7-unknown-linux-gnueabihf.tar.gz react  && cd ../../..

      - name: Upload react-x86_64-unknown-linux-gnu.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: react-x86_64-unknown-linux-gnu.tar.gz
          path: target/x86_64-unknown-linux-gnu/release/react-x86_64-unknown-linux-gnu.tar.gz
      - name: Upload aarch64-unknown-linux-gnu.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: react-aarch64-unknown-linux-gnu.tar.gz
          path: target/aarch64-unknown-linux-gnu/release/react-aarch64-unknown-linux-gnu.tar.gz
      - name: Upload i686-unknown-linux-gnu.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: react-i686-unknown-linux-gnu.tar.gz
          path: target/i686-unknown-linux-gnu/release/react-i686-unknown-linux-gnu.tar.gz
      - name: Upload armv7-unknown-linux-gnueabi.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: react-armv7-unknown-linux-gnueabi.tar.gz
          path: target/armv7-unknown-linux-gnueabi/release/react-armv7-unknown-linux-gnueabi.tar.gz
      - name: Upload armv7-unknown-linux-gnueabihf.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: react-armv7-unknown-linux-gnueabihf.tar.gz
          path: target/armv7-unknown-linux-gnueabihf/release/react-armv7-unknown-linux-gnueabihf.tar.gz
      - name: Publish in release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/x86_64-unknown-linux-gnu/release/react-x86_64-unknown-linux-gnu.tar.gz
            target/i686-unknown-linux-gnu/release/react-i686-unknown-linux-gnu.tar.gz
            target/aarch64-unknown-linux-gnu/release/react-aarch64-unknown-linux-gnu.tar.gz
            target/armv7-unknown-linux-gnueabi/release/react-armv7-unknown-linux-gnueabi.tar.gz
            target/armv7-unknown-linux-gnueabihf/release/react-armv7-unknown-linux-gnueabihf.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
  build-musl-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Build the binary
        uses: ./actions/linux-musl
      - name: Upload react-x86_64-unknown-linux-musl.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: react-x86_64-unknown-linux-musl.tar.gz
          path: target/x86_64-unknown-linux-musl/release/react-x86_64-unknown-linux-musl.tar.gz
      - name: Upload aarch64-unknown-linux-musl.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: react-aarch64-unknown-linux-musl.tar.gz
          path: target/aarch64-unknown-linux-musl/release/react-aarch64-unknown-linux-musl.tar.gz
      - name: Upload i686-unknown-linux-musl.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: react-i686-unknown-linux-musl.tar.gz
          path: target/i686-unknown-linux-musl/release/react-i686-unknown-linux-musl.tar.gz
      - name: Upload armv7-unknown-linux-musleabi.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: react-armv7-unknown-linux-musleabi.tar.gz
          path: target/armv7-unknown-linux-musleabi/release/react-armv7-unknown-linux-musleabi.tar.gz
      - name: Upload armv7-unknown-linux-musleabihf.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: react-armv7-unknown-linux-musleabihf.tar.gz
          path: target/armv7-unknown-linux-musleabihf/release/react-armv7-unknown-linux-musleabihf.tar.gz
      - name: Publish in release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/x86_64-unknown-linux-musl/release/react-x86_64-unknown-linux-musl.tar.gz
            target/i686-unknown-linux-musl/release/react-i686-unknown-linux-musl.tar.gz
            target/aarch64-unknown-linux-musl/release/react-aarch64-unknown-linux-musl.tar.gz
            target/armv7-unknown-linux-musleabi/release/react-armv7-unknown-linux-musleabi.tar.gz
            target/armv7-unknown-linux-musleabihf/release/react-armv7-unknown-linux-musleabihf.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
  build-npm:
    runs-on: ubuntu-latest
    needs: [build-windows, build-macos, build-gnu-linux, build-musl-linux]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
      - name: Setup yarn
        run: |
          sudo corepack enable
          yarn set version berry
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          path: binaries/
      - name: Copy binaries
        run: |
          chmod +x ../scripts/copy_binaries.sh
          ../scripts/copy_binaries.sh
        working-directory: binaries/
      - name: Publish Packages
        run: |
          yarn install
          yarn set version classic
          yarn lerna bootstrap
          yarn lerna version --conventional-commits --conventional-graduate --yes --include-merged-tags
          node -e 'console.log(require("./package.json").version)'
          yarn lerna publish from-package --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
